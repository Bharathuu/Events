// index.css 
.registration-status-container {
  display: flex;
  justify-content: center;
  align-items: center;
  background-color: #ffffff;
  width: 40%;
  height: 100vh;
}
.viwe-container {
  display: flex;
  flex-direction: column;
  align-items: center;
  width: 90%;
}
.yet-to-register-image {
  width: 90%;
  max-width: 461px;
}
.register-description {
  text-align: center;
  color: #64748b;
  font-family: 'Roboto';
  font-size: 19px;
  line-height: 1.5;
  margin: 0px;
  margin-top: 48px;
}
.register-here-button {
  text-align: center;
  color: #ffffff;
  font-family: 'Roboto';
  font-size: 16px;
  font-weight: 500;
  line-height: 1.5;
  background-color: #0967d2;
  width: 90%;
  border: none;
  border-radius: 8px;
  margin-top: 48px;
  padding-top: 12px;
  padding-bottom: 12px;
  outline: none;
  cursor: pointer;
}
.registered-img {
  width: 80%;
  max-width: 100px;
}
.registered-heading {
  text-align: center;
  color: #323f4b;
  font-size: 24px;
  font-family: 'Roboto';
  font-weight: 600;
  line-height: 1.2;
  margin: 0px;
  margin-top: 40px;
}
.registration-closed-image {
  width: 80%;
  max-width: 393px;
}
.registrations-closed-heading {
  text-align: center;
  color: #323f4b;
  font-family: 'Roboto';
  font-size: 24px;
  font-weight: 600;
  line-height: 1.2;
  margin: 0px;
  margin-top: 32px;
}
.registrations-closed-description {
  text-align: center;
  color: #475569;
  font-family: 'Roboto';
  font-size: 18px;
  font-weight: 600;
  line-height: 1.7;
  margin: 0px;
  margin-top: 16px;
}
.no-active-event-description {
  text-align: center;
  align-self: flex-start;
  color: #64748b;
  font-family: 'Roboto';
  font-size: 24px;
  font-weight: 500;
  line-height: 1.75;
  margin: 0px;
  margin-top: 64px;
  margin-right: 16px;
  margin-left: 16px;
}
//index.js
import './index.css'

const registrationStatus = {
  yetToRegister: 'YET_TO_REGISTER',
  registered: 'REGISTERED',
  registrationsClosed: 'REGISTRATIONS_CLOSED',
}

const ActiveEventRegistrationDetails = props => {
  const {activeEventRegistrationStatus} = props

  const renderNoActiveEventView = () => (
    <p className="no-active-event-description">
      Click on an event, to view its registration details
    </p>
  )

  const renderRegistrationsClosedView = () => (
    <div className="view-container">
      <img
        src="https://assets.ccbp.in/frontend/react-js/events-registrations-closed-img.png"
        alt="registrations closed"
        className="registrations-closed-image"
      />
      <h1 className="registrations-closed-heading">
        {' '}
        Registrations Are Closed Now!
      </h1>
      <p className="registrations-closed-description">
        Stay tuned. We will reopen the registrations soon!
      </p>
    </div>
  )
  const renderRegisteredView = () => (
    <div className="view-container">
      <img
        src="https://assets.ccbp.in/frontend/react-js/events-regestered-img.png"
        alt="registered"
        className="registered-img"
      />
      <h1 className="registered-heading">
        You have already registered for the event
      </h1>
    </div>
  )
  const renderYetToRegisterView = () => (
    <div className="view-container">
      <img
        src="https://assets.ccbp.in/frontend/react-js/events-register-img.png"
        alt="yet to register"
        className="yet-to-register-image"
      />
      <p className="register-description">
        A live performance brings so much to your relationship with dance.
        Seeing dance live can often make you fall totally in love with this
        beatiful art form.
      </p>
      <button type="button" className="register-here-button">
        Register Here
      </button>
    </div>
  )
  const renderActiveEventRegistrationDetails = () => {
    switch (activeEventRegistrationStatus) {
      case registrationStatus.yetToRegister:
        return renderYetToRegisterView()
      case registrationStatus.registered:
        return renderRegisteredView()
      case registrationStatus.registrationsClosed:
        return renderRegistrationsClosedView()
      default:
        return renderNoActiveEventView()
    }
  }
  return (
    <div className="registration-status-container">
      {renderActiveEventRegistrationDetails()}
    </div>
  )
}
export default ActiveEventRegistrationDetails
